
!----------global simulation parameters----------
simulation
{
 algorithm = "cuda",
}


!--------the node configuration for this simulation--------
node_conf 
{
 node_number = 1, 2, ! number of GPUs you are using
 n_threads = 1, ! number of threads per GPU
 tile_number = 32, 64, ! n_tiles_tot should be greater than n_cells_tot / 1024 and be a power of two. Refer to osiris cuda documentation
 if_periodic(1:2) = .true., .false.,
}


!----------spatial grid----------
grid
{
 nx_p = 761, 8000, ! number of cells 
}


!----------time step and global data dump timestep number----------
time_step
{
 dt     = 0.118, ! time step in wpe^-1
 ndump  = 512, ! number of time steps between data dumps,
}


!----------restart information----------
restart
{
  ndump_fac = -1,
  ndump_time = 3590, !once/hour
  if_restart = .false.,
  if_remold = .true.,
}


!----------spatial limits ----------
space
{
 xmin(1:2) = -64, 0,
 xmax(1:2) = 64, 1344,
}


!----------time limits ----------
time
{
 tmin = 0.0,
 tmax = 78140, ! Just to make your life easier, your upstream gyrotime for an rqm of 76 is 7814
}

!----------field solver set up----------
el_mag_fld
{
  type_init_b(1:3) = "math func", "math func", "math func",
  init_b_mfunc(1) = "if(x2 < 3.51120e+02, x2*(1.80795e-06) + (-1.35020e-04), if(x2 < 3.84278e+02, x2*(-4.39288e-04) + (1.54743e-01), if(x2 < 4.19782e+02, x2*(2.3906e-03) + (-9.32720e-01), if(x2 < 5.53209e+02, x2*(-1.91220e-04) + (1.51079e-01), if(x2 < 5.72481e+02, x2*(-1.55154e-03) + (9.03623e-01), if(x2 < 1.34491e+03, x2*(-1.89366e-07) + (1.55026e-02), 0.015502604393642472))))))",
  init_b_mfunc(2) = "if(x2 < 1.89282e+02, x2*(-1.64971e-07) + (4.35369e-05), if(x2 < 2.62791e+02, x2*(-9.97215e-08) + (3.11862e-05), if(x2 < 4.57402e+02, x2*(-1.04438e-07) + (3.24256e-05), if(x2 < 4.88839e+02, x2*(3.43888e-05) + (-1.57449e-02), if(x2 < 5.08828e+02, x2*(-6.65432e-05) + (3.35947e-02), if(x2 < 5.42778e+02, x2*(3.54243e-05) + (-1.82892e-02), if(x2 < 5.67314e+02, x2*(-3.44748e-05) + (1.96505e-02), if(x2 < 7.59918e+02, x2*(1.92992e-08) + (8.14739e-05), if(x2 < 1.00125e+03, x2*(2.24037e-07) + (-7.41103e-05), if(x2 < 1.34491e+03, x2*(-6.71903e-08) + (2.17481e-04), 0.0002174807452788047))))))))))",
  init_b_mfunc(3) = "if(x2 < 2.31328e+02, x2*(-9.84220e-08) + (2.21853e-06), if(x2 < 3.65046e+02, x2*(2.27819e-07) + (-7.32502e-05), if(x2 < 3.79388e+02, x2*(3.6777e-05) + (-1.34154e-02), if(x2 < 3.98918e+02, x2*(-4.62843e-05) + (1.80971e-02), if(x2 < 5.41807e+02, x2*(5.92452e-06) + (-2.72997e-03), if(x2 < 5.55375e+02, x2*(-2.64096e-05) + (1.47889e-02), if(x2 < 9.12289e+02, x2*(-4.22545e-07) + (3.56324e-04), if(x2 < 9.67314e+02, x2*(5.96515e-07) + (-5.73354e-04), if(x2 < 1.01683e+03, x2*(-1.19593e-06) + (1.16051e-03), if(x2 < 1.34491e+03, x2*(-1.99923e-07) + (1.47732e-04), 0.00014773208331796407))))))))))",
  type_init_e(1:3) = "math func", "math func", "math func",
  init_e_mfunc(1) = "if(x2 < 2.98888e+02, x2*(1.02785e-10) + (4.93019e-09), if(x2 < 5.04495e+02, x2*(-3.22163e-11) + (4.52806e-08), if(x2 < 5.34688e+02, x2*(-4.06002e-08) + (2.05116e-05), if(x2 < 6.05421e+02, x2*(1.76426e-08) + (-1.06301e-05), if(x2 < 1.34491e+03, x2*(-1.01518e-10) + (1.12579e-07), 1.1257926287837547e-07)))))",
  init_e_mfunc(2) = "if(x2 < 7.65045e+01, x2*(1.56619e-10) + (-4.34936e-09), if(x2 < 1.24244e+02, x2*(-9.60128e-10) + (8.10868e-08), if(x2 < 3.98595e+02, x2*(5.09537e-10) + (-1.01511e-07), if(x2 < 4.20756e+02, x2*(-4.32316e-07) + (1.72421e-04), if(x2 < 5.42398e+02, x2*(1.14351e-07) + (-5.75931e-05), if(x2 < 5.86844e+02, x2*(-1.01986e-07) + (5.97476e-05), if(x2 < 7.34808e+02, x2*(2.98228e-10) + (-2.77128e-07), if(x2 < 1.34491e+03, x2*(-3.65149e-11) + (-3.1156e-08), -3.1155971306201304e-08))))))))",
  init_e_mfunc(3) = "if(x2 < 1.22429e+02, x2*(6.54466e-09) + (-1.62772e-07), if(x2 < 2.04010e+02, x2*(-3.16904e-08) + (4.51831e-06), if(x2 < 2.62453e+02, x2*(2.13782e-07) + (-4.55606e-05), if(x2 < 3.78155e+02, x2*(-3.38065e-07) + (9.92731e-05), if(x2 < 4.16886e+02, x2*(5.45557e-06) + (-2.09162e-03), if(x2 < 4.35552e+02, x2*(-4.96271e-07) + (3.89617e-04), if(x2 < 5.41659e+02, x2*(-5.24269e-07) + (4.01812e-04), if(x2 < 5.67067e+02, x2*(-4.37412e-06) + (2.48712e-03), if(x2 < 7.83918e+02, x2*(-3.63023e-08) + (2.72858e-05), if(x2 < 1.34491e+03, x2*(3.19213e-09) + (-3.67466e-06), -3.6746597638396146e-06))))))))))", ! This is the most important component, can probably ignore others
}

!----------boundary conditions for em-fields ----------
emf_bound
{
 type(1:2,2) =  "reflecting", "open", ! boundaries for x2
}

!----------- electro-magnetic field diagnostics ---------
diag_emf
{
 ndump_fac = 1,
 reports = 
   "b1", "b2", "b3",
   "e1", "e2", "e3",
}

!----------number of particle species----------
particles
{
  interpolation = "quadratic",
  num_species = 3,
}

!----------information for electrons----------
species
{
 name = "electrons",
 rqm=-1.0,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities - electrons-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 3.95773e+02, x2*(1.78872e-06) + (5.78646e-02), if(x2 < 4.28469e+02, x2*(7.15424e-04) + (-2.24573e-01), if(x2 < 5.60063e+02, x2*(1.53819e-04) + (1.60573e-02), if(x2 < 5.74494e+02, x2*(-4.02084e-03) + (2.35413e+00), if(x2 < 1.34491e+03, x2*(1.45072e-06) + (4.3349e-02), 0.043348957211356426)))))",
  spatial_uth(2) = "if(x2 < 3.95773e+02, x2*(1.78872e-06) + (5.78646e-02), if(x2 < 4.28469e+02, x2*(7.15424e-04) + (-2.24573e-01), if(x2 < 5.60063e+02, x2*(1.53819e-04) + (1.60573e-02), if(x2 < 5.74494e+02, x2*(-4.02084e-03) + (2.35413e+00), if(x2 < 1.34491e+03, x2*(1.45072e-06) + (4.3349e-02), 0.043348957211356426)))))",
  spatial_uth(3) = "if(x2 < 3.95773e+02, x2*(1.78872e-06) + (5.78646e-02), if(x2 < 4.28469e+02, x2*(7.15424e-04) + (-2.24573e-01), if(x2 < 5.60063e+02, x2*(1.53819e-04) + (1.60573e-02), if(x2 < 5.74494e+02, x2*(-4.02084e-03) + (2.35413e+00), if(x2 < 1.34491e+03, x2*(1.45072e-06) + (4.3349e-02), 0.043348957211356426)))))",

  spatial_ufl(1) = "if(x2 < 4.70061e+01, x2*(1.85605e-06) + (7.68077e-04), if(x2 < 1.48673e+02, x2*(-1.01375e-05) + (1.33185e-03), if(x2 < 3.91286e+02, x2*(3.1841e-06) + (-6.48714e-04), if(x2 < 3.94357e+02, x2*(-1.38322e-05) + (6.00952e-03), if(x2 < 1.34491e+03, x2*(1.65522e-07) + (4.89417e-04), 0.0004894171068534241)))))",
  spatial_ufl(2) = "if(x2 < 2.94421e+02, x2*(3.25250e-05) + (1.52286e-02), if(x2 < 3.61762e+02, x2*(7.79208e-06) + (2.25105e-02), if(x2 < 4.64859e+02, x2*(-7.82334e-05) + (5.36313e-02), if(x2 < 5.59296e+02, x2*(-4.30212e-06) + (1.92636e-02), if(x2 < 5.73947e+02, x2*(-1.15517e-03) + (6.62941e-01), if(x2 < 6.31552e+02, x2*(1.91325e-06) + (-1.16439e-03), if(x2 < 6.39008e+02, x2*(-5.04569e-06) + (3.23055e-03), if(x2 < 7.27619e+02, x2*(-3.61694e-08) + (2.94265e-05), if(x2 < 8.03622e+02, x2*(5.22856e-07) + (-3.77331e-04), if(x2 < 8.92191e+02, x2*(-2.42393e-07) + (2.37640e-04), if(x2 < 9.20679e+02, x2*(1.1833e-06) + (-1.03435e-03), if(x2 < 9.73676e+02, x2*(-5.47976e-07) + (5.59598e-04), if(x2 < 1.04217e+03, x2*(4.64077e-07) + (-4.25814e-04), if(x2 < 1.16794e+03, x2*(-4.04817e-07) + (4.7972e-04), if(x2 < 1.34491e+03, x2*(1.98613e-07) + (-2.25049e-04), -0.00022504860225108797)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 2.36558e+02, x2*(-3.08773e-07) + (1.31876e-04), if(x2 < 3.63609e+02, x2*(1.53568e-06) + (-3.04445e-04), if(x2 < 4.13682e+02, x2*(-1.00855e-05) + (3.92112e-03), if(x2 < 4.35416e+02, x2*(6.80135e-05) + (-2.8387e-02), if(x2 < 4.81579e+02, x2*(-2.78579e-05) + (1.3357e-02), if(x2 < 5.69731e+02, x2*(2.60843e-06) + (-1.31501e-03), if(x2 < 8.60444e+02, x2*(-6.14711e-07) + (5.21311e-04), if(x2 < 1.34491e+03, x2*(1.01393e-07) + (-9.48561e-05), -9.485614009317518e-05))))))))",
}

!----------density profile for electrons----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 9.76312e+00, x2*(-7.00732e-01) + (9.17615e+01), if(x2 < 1.16446e+02, x2*(-4.20479e-01) + (8.90253e+01), if(x2 < 2.68581e+02, x2*(-1.21742e-01) + (5.42386e+01), if(x2 < 4.03880e+02, x2*(-6.2917e-02) + (3.84392e+01), if(x2 < 4.19948e+02, x2*(-5.48997e-01) + (2.34757e+02), if(x2 < 5.59433e+02, x2*(-3.12105e-03) + (5.51797e+00), if(x2 < 5.72783e+02, x2*(-1.75769e-01) + (1.02103e+02), if(x2 < 1.34491e+03, x2*(1.7736e-04) + (1.32378e+00), 1.3237838803361222))))))))",
}

!----------boundary conditions for electrons----------
spe_bound
{
 type(1:2,2) = "reflecting","open",
}

!----------diagnostic for electrons----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2,
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0, ! phase space covers the entire domain. change as needed
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
   
!----------information for Aluminum ions----------
species
{
 name = "aluminum",
 rqm = 76,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Aluminum ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",
  spatial_uth(2) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",
  spatial_uth(3) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",

  spatial_ufl(1) = "if(x2 < 5.74222e+01, x2*(5.36032e-07) + (7.83018e-04), if(x2 < 1.27748e+02, x2*(-1.18636e-05) + (1.49503e-03), if(x2 < 1.64860e+02, x2*(-9.03616e-07) + (9.49132e-05), if(x2 < 1.96331e+02, x2*(1.91487e-07) + (-8.56255e-05), if(x2 < 2.98239e+02, x2*(2.61731e-06) + (-5.61891e-04), if(x2 < 3.43373e+02, x2*(7.76306e-06) + (-2.09655e-03), if(x2 < 4.03090e+02, x2*(-1.80573e-06) + (1.18911e-03), if(x2 < 4.83845e+02, x2*(1.66761e-06) + (-2.10957e-04), if(x2 < 5.05828e+02, x2*(-2.83025e-07) + (7.32847e-04), if(x2 < 5.47184e+02, x2*(-2.42974e-06) + (1.81872e-03), if(x2 < 7.30548e+02, x2*(8.97229e-07) + (-1.74692e-06), if(x2 < 8.12845e+02, x2*(1.80158e-07) + (5.22108e-04), if(x2 < 9.2037e+02, x2*(-2.03520e-07) + (8.33979e-04), if(x2 < 1.24133e+03, x2*(2.25732e-08) + (6.2589e-04), if(x2 < 1.34491e+03, x2*(1.30954e-06) + (-9.7167e-04), -0.0009716695312587414)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 1.29249e+02, x2*(3.04607e-05) + (1.53239e-02), if(x2 < 2.34633e+02, x2*(3.72183e-05) + (1.44505e-02), if(x2 < 3.03978e+02, x2*(2.06048e-05) + (1.83486e-02), if(x2 < 3.09786e+02, x2*(1.62293e-04) + (-2.47213e-02), if(x2 < 3.94160e+02, x2*(-1.87469e-05) + (3.13622e-02), if(x2 < 4.05660e+02, x2*(-1.35808e-04) + (7.7503e-02), if(x2 < 4.28936e+02, x2*(-8.30309e-05) + (5.60934e-02), if(x2 < 4.31183e+02, x2*(-1.07508e-03) + (4.81619e-01), if(x2 < 5.58615e+02, x2*(-1.22921e-05) + (2.33625e-02), if(x2 < 5.74295e+02, x2*(-1.06733e-03) + (6.12723e-01), if(x2 < 6.13146e+02, x2*(7.67303e-06) + (-4.64578e-03), if(x2 < 6.75624e+02, x2*(-1.37449e-06) + (9.01668e-04), if(x2 < 8.04318e+02, x2*(1.73041e-07) + (-1.43880e-04), if(x2 < 1.24496e+03, x2*(4.99028e-08) + (-4.48381e-05), if(x2 < 1.34491e+03, x2*(4.36024e-07) + (-5.25545e-04), -0.000525544897011709)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 3.78496e+02, x2*(3.34359e-07) + (6.43128e-05), if(x2 < 4.47575e+02, x2*(9.81997e-06) + (-3.52595e-03), if(x2 < 5.21878e+02, x2*(-1.63517e-05) + (8.18785e-03), if(x2 < 5.52393e+02, x2*(-8.66700e-06) + (4.17737e-03), if(x2 < 6.02214e+02, x2*(1.34388e-05) + (-8.03372e-03), if(x2 < 1.02891e+03, x2*(-9.44296e-08) + (1.16166e-04), if(x2 < 1.16654e+03, x2*(9.13541e-08) + (-7.49895e-05), if(x2 < 1.34491e+03, x2*(-1.24925e-09) + (3.30359e-05), 3.3035884702166186e-05))))))))",
}

!----------density profile for Aluminum ions----------
profile
{
 profile_type = "math func",
 math_func_expr = "if(x2 < 4.05887e+02, x2*(9.00321e-16) + (-2.80605e-13), if(x2 < 4.11567e+02, x2*(1.47846e+00) + (-6.0009e+02), if(x2 < 4.24053e+02, x2*(-3.48918e-01) + (1.51999e+02), if(x2 < 5.58976e+02, x2*(-1.38995e-03) + (4.62921e+00), if(x2 < 5.72865e+02, x2*(-1.75767e-01) + (1.02102e+02), if(x2 < 7.13986e+02, x2*(-3.30515e-04) + (1.60025e+00), if(x2 < 9.15027e+02, x2*(1.16125e-03) + (5.35153e-01), if(x2 < 1.34491e+03, x2*(-2.89394e-04) + (1.86253e+00), 1.862531880358622))))))))",
}

!----------boundary conditions for Alumium ions----------
spe_bound
{
 type(1:2,2) = "reflecting", "open",
}

!----------diagnostic for Aluminum ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2, 
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

!----------information for Silicon ions----------
species
{
 name = "silicon",
 rqm = 73,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Silicon ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",
  spatial_uth(2) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",
  spatial_uth(3) = "if(x2 < 2.25065e+02, x2*(-5.46927e-06) + (5.33617e-03), if(x2 < 3.69015e+02, x2*(-2.56702e-06) + (4.68297e-03), if(x2 < 5.54878e+02, x2*(-1.48175e-06) + (4.28249e-03), if(x2 < 5.98393e+02, x2*(-3.87080e-05) + (2.49385e-02), if(x2 < 1.34491e+03, x2*(1.06344e-07) + (1.71228e-03), 0.00171228238163127)))))",

  spatial_ufl(1) = "if(x2 < 5.74222e+01, x2*(5.36032e-07) + (7.83018e-04), if(x2 < 1.27748e+02, x2*(-1.18636e-05) + (1.49503e-03), if(x2 < 1.64860e+02, x2*(-9.03616e-07) + (9.49132e-05), if(x2 < 1.96331e+02, x2*(1.91487e-07) + (-8.56255e-05), if(x2 < 2.98239e+02, x2*(2.61731e-06) + (-5.61891e-04), if(x2 < 3.43373e+02, x2*(7.76306e-06) + (-2.09655e-03), if(x2 < 4.03090e+02, x2*(-1.80573e-06) + (1.18911e-03), if(x2 < 4.83845e+02, x2*(1.66761e-06) + (-2.10957e-04), if(x2 < 5.05828e+02, x2*(-2.83025e-07) + (7.32847e-04), if(x2 < 5.47184e+02, x2*(-2.42974e-06) + (1.81872e-03), if(x2 < 7.30548e+02, x2*(8.97229e-07) + (-1.74692e-06), if(x2 < 8.12845e+02, x2*(1.80158e-07) + (5.22108e-04), if(x2 < 9.2037e+02, x2*(-2.03520e-07) + (8.33979e-04), if(x2 < 1.24133e+03, x2*(2.25732e-08) + (6.2589e-04), if(x2 < 1.34491e+03, x2*(1.30954e-06) + (-9.7167e-04), -0.0009716695312587414)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 1.29249e+02, x2*(3.04607e-05) + (1.53239e-02), if(x2 < 2.34633e+02, x2*(3.72183e-05) + (1.44505e-02), if(x2 < 3.03978e+02, x2*(2.06048e-05) + (1.83486e-02), if(x2 < 3.09786e+02, x2*(1.62293e-04) + (-2.47213e-02), if(x2 < 3.94160e+02, x2*(-1.87469e-05) + (3.13622e-02), if(x2 < 4.05660e+02, x2*(-1.35808e-04) + (7.7503e-02), if(x2 < 4.28936e+02, x2*(-8.30309e-05) + (5.60934e-02), if(x2 < 4.31183e+02, x2*(-1.07508e-03) + (4.81619e-01), if(x2 < 5.58615e+02, x2*(-1.22921e-05) + (2.33625e-02), if(x2 < 5.74295e+02, x2*(-1.06733e-03) + (6.12723e-01), if(x2 < 6.13146e+02, x2*(7.67303e-06) + (-4.64578e-03), if(x2 < 6.75624e+02, x2*(-1.37449e-06) + (9.01668e-04), if(x2 < 8.04318e+02, x2*(1.73041e-07) + (-1.43880e-04), if(x2 < 1.24496e+03, x2*(4.99028e-08) + (-4.48381e-05), if(x2 < 1.34491e+03, x2*(4.36024e-07) + (-5.25545e-04), -0.000525544897011709)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 3.78496e+02, x2*(3.34359e-07) + (6.43128e-05), if(x2 < 4.47575e+02, x2*(9.81997e-06) + (-3.52595e-03), if(x2 < 5.21878e+02, x2*(-1.63517e-05) + (8.18785e-03), if(x2 < 5.52393e+02, x2*(-8.66700e-06) + (4.17737e-03), if(x2 < 6.02214e+02, x2*(1.34388e-05) + (-8.03372e-03), if(x2 < 1.02891e+03, x2*(-9.44296e-08) + (1.16166e-04), if(x2 < 1.16654e+03, x2*(9.13541e-08) + (-7.49895e-05), if(x2 < 1.34491e+03, x2*(-1.24925e-09) + (3.30359e-05), 3.3035884702166186e-05))))))))",
}

!----------density profile for Silicon ions----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 8.61907e+00, x2*(-7.00727e-01) + (9.17614e+01), if(x2 < 1.03938e+02, x2*(-4.29490e-01) + (8.94236e+01), if(x2 < 1.3422e+02, x2*(-2.37771e-01) + (6.94968e+01), if(x2 < 2.68778e+02, x2*(-1.18093e-01) + (5.34336e+01), if(x2 < 3.79501e+02, x2*(-6.69265e-02) + (3.96812e+01), if(x2 < 4.04576e+02, x2*(-8.97652e-03) + (1.76891e+01), if(x2 < 4.10269e+02, x2*(-2.46948e+00) + (1.01315e+03), if(x2 < 1.34491e+03, x2*(1.47713e-10) + (-1.5305e-07), -1.5304951843959934e-07))))))))",
}

!----------boundary conditions for Silicon ions----------
spe_bound
{
 type(1:2,2) = "reflecting","open",
}

!----------diagnostic for Silicon ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2, 
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
