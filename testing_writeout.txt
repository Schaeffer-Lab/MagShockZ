
!----------global simulation parameters----------
simulation
{
 algorithm = "cuda",
}


!--------the node configuration for this simulation--------
node_conf 
{
 node_number = 1, 2, ! number of GPUs you are using
 n_threads = 1, ! number of threads per GPU
 tile_number = 32, 64, ! n_tiles_tot should be greater than n_cells_tot / 1024 and be a power of two. Refer to osiris cuda documentation
 if_periodic(1:2) = .true., .false.,
}


!----------spatial grid----------
grid
{
 nx_p = 761, 8000, ! number of cells 
}


!----------time step and global data dump timestep number----------
time_step
{
 dt     = 0.118, ! time step in wpe^-1
 ndump  = 2567, ! number of time steps between data dumps,
}


!----------restart information----------
restart
{
! It seems like restart is broken on the GPU version
!  ndump_fac = -1,
!  ndump_time = 3590, !once/hour
!  if_restart = .false.,
!  if_remold = .true.,
}


!----------spatial limits ----------
space
{
 xmin(1:2) = -64, 0,
 xmax(1:2) = 64, 1344,
}


!----------time limits ----------
time
{
 tmin = 0.0,
 tmax = 78140, ! Just to make your life easier, your upstream gyrotime for an rqm of 76 is 7814
}

!----------field solver set up----------
el_mag_fld
{
  type_init_b(1:3) = "math func", "math func", "math func",
  init_b_mfunc(1) = "if(x2 < 3.46771e+02, x2*(1.64259e-06) + (-1.16666e-04), if(x2 < 3.86336e+02, x2*(-2.99059e-04) + (1.04158e-01), if(x2 < 4.20032e+02, x2*(2.45223e-03) + (-9.58766e-01), if(x2 < 5.53594e+02, x2*(-1.97585e-04) + (1.54243e-01), if(x2 < 5.73117e+02, x2*(-1.51195e-03) + (8.81866e-01), if(x2 < 1.34491e+03, x2*(-9.26391e-08) + (1.53972e-02), 0.015397156519514281))))))",
  init_b_mfunc(2) = "if(x2 < 4.15059e+02, x2*(3.59133e-08) + (1.70515e-05), if(x2 < 4.45849e+02, x2*(-1.32574e-05) + (5.53457e-03), if(x2 < 4.75388e+02, x2*(3.95781e-05) + (-1.80221e-02), if(x2 < 4.78702e+02, x2*(-5.07276e-05) + (2.49081e-02), if(x2 < 6.1934e+02, x2*(-4.10167e-06) + (2.58816e-03), if(x2 < 6.57258e+02, x2*(7.56942e-07) + (-4.20974e-04), if(x2 < 7.13643e+02, x2*(8.97737e-08) + (1.75268e-05), if(x2 < 8.67912e+02, x2*(4.01924e-07) + (-2.05237e-04), if(x2 < 1.30185e+03, x2*(-3.6353e-08) + (1.75148e-04), if(x2 < 1.34491e+03, x2*(8.98810e-07) + (-1.04229e-03), -0.0010422931506482384))))))))))",
  init_b_mfunc(3) = "if(x2 < 7.04928e+01, x2*(-1.34383e-07) + (1.02501e-06), if(x2 < 1.21842e+02, x2*(2.09933e-07) + (-2.32468e-05), if(x2 < 3.46888e+02, x2*(-1.97786e-07) + (2.64305e-05), if(x2 < 3.78217e+02, x2*(1.38122e-05) + (-4.83347e-03), if(x2 < 4.14842e+02, x2*(-2.48293e-05) + (9.78139e-03), if(x2 < 4.56401e+02, x2*(1.90195e-05) + (-8.40893e-03), if(x2 < 5.13977e+02, x2*(-7.40714e-06) + (3.65223e-03), if(x2 < 5.16905e+02, x2*(1.28331e-04) + (-6.61140e-02), if(x2 < 1.06823e+03, x2*(-5.84450e-07) + (5.22951e-04), if(x2 < 1.34491e+03, x2*(-2.55544e-09) + (-9.86497e-05), -9.864966557716601e-05))))))))))",
  type_init_e(1:3) = "math func", "math func", "math func",
  init_e_mfunc(1) = "if(x2 < 1.01564e+02, x2*(7.85887e-11) + (4.18534e-09), if(x2 < 4.93573e+02, x2*(1.24454e-10) + (-4.72946e-10), if(x2 < 5.17510e+02, x2*(-5.05415e-08) + (2.50069e-05), if(x2 < 5.75672e+02, x2*(1.94188e-08) + (-1.11983e-05), if(x2 < 1.34491e+03, x2*(3.92475e-11) + (-4.20485e-08), -4.2048479466460486e-08)))))",
  init_e_mfunc(2) = "if(x2 < 3.00104e+02, x2*(-1.25418e-10) + (1.10819e-08), if(x2 < 3.75171e+02, x2*(3.11238e-09) + (-9.60596e-07), if(x2 < 3.90184e+02, x2*(4.77219e-08) + (-1.76968e-05), if(x2 < 4.32032e+02, x2*(-2.84357e-07) + (1.11875e-04), if(x2 < 4.85594e+02, x2*(2.26742e-07) + (-1.08936e-04), if(x2 < 8.29334e+02, x2*(-4.19238e-09) + (3.20432e-06), if(x2 < 1.17021e+03, x2*(8.08312e-10) + (-9.42925e-07), if(x2 < 1.34491e+03, x2*(-6.79571e-10) + (7.98212e-07), 7.98211919554367e-07))))))))",
  init_e_mfunc(3) = "if(x2 < 3.82535e+02, x2*(-3.24876e-08) + (4.17502e-06), if(x2 < 4.11214e+02, x2*(4.64114e-06) + (-1.78365e-03), if(x2 < 4.14075e+02, x2*(2.35197e-05) + (-9.5468e-03), if(x2 < 5.56571e+02, x2*(-6.49856e-07) + (4.61229e-04), if(x2 < 5.67183e+02, x2*(-9.11393e-06) + (5.17209e-03), if(x2 < 7.10242e+02, x2*(-2.56374e-08) + (1.73642e-05), if(x2 < 8.25814e+02, x2*(8.43683e-09) + (-6.83677e-06), if(x2 < 1.02048e+03, x2*(-8.31440e-10) + (8.17099e-07), if(x2 < 1.32631e+03, x2*(3.5734e-10) + (-3.96031e-07), if(x2 < 1.34491e+03, x2*(-1.1711e-09) + (1.63114e-06), 1.6311431627093954e-06))))))))))", ! This is the most important component, can probably ignore others
}

!----------boundary conditions for em-fields ----------
emf_bound
{
 type(1:2,2) =  "open", "open", ! boundaries for x2
}

!----------- electro-magnetic field diagnostics ---------
diag_emf
{
 ndump_fac = 1,
 reports = 
   "b1", "b2", "b3",
   "e1", "e2", "e3",
}

!----------number of particle species----------
particles
{
  interpolation = "quadratic",
  num_species = 3,
}

!----------information for electrons----------
species
{
 name = "electrons",
 rqm=-1.0,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities - electrons-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 4.02808e+02, x2*(2.78659e-06) + (5.77363e-02), if(x2 < 4.21234e+02, x2*(1.16411e-03) + (-4.10053e-01), if(x2 < 5.59902e+02, x2*(1.59295e-04) + (1.32079e-02), if(x2 < 5.74911e+02, x2*(-3.88134e-03) + (2.27557e+00), if(x2 < 1.34491e+03, x2*(1.52507e-06) + (4.32678e-02), 0.04326783221864951)))))",
  spatial_uth(2) = "if(x2 < 4.02808e+02, x2*(2.78659e-06) + (5.77363e-02), if(x2 < 4.21234e+02, x2*(1.16411e-03) + (-4.10053e-01), if(x2 < 5.59902e+02, x2*(1.59295e-04) + (1.32079e-02), if(x2 < 5.74911e+02, x2*(-3.88134e-03) + (2.27557e+00), if(x2 < 1.34491e+03, x2*(1.52507e-06) + (4.32678e-02), 0.04326783221864951)))))",
  spatial_uth(3) = "if(x2 < 4.02808e+02, x2*(2.78659e-06) + (5.77363e-02), if(x2 < 4.21234e+02, x2*(1.16411e-03) + (-4.10053e-01), if(x2 < 5.59902e+02, x2*(1.59295e-04) + (1.32079e-02), if(x2 < 5.74911e+02, x2*(-3.88134e-03) + (2.27557e+00), if(x2 < 1.34491e+03, x2*(1.52507e-06) + (4.32678e-02), 0.04326783221864951)))))",

  spatial_ufl(1) = "if(x2 < 2.30312e+01, x2*(9.13362e-06) + (7.46451e-04), if(x2 < 1.55799e+02, x2*(-8.50173e-06) + (1.15261e-03), if(x2 < 3.47283e+02, x2*(3.50351e-06) + (-7.17795e-04), if(x2 < 7.72543e+02, x2*(3.37418e-07) + (3.81736e-04), if(x2 < 1.34491e+03, x2*(8.84917e-08) + (5.74043e-04), 0.0005740426479358211)))))",
  spatial_ufl(2) = "if(x2 < 3.38207e+02, x2*(3.122e-05) + (1.53641e-02), if(x2 < 3.70969e+02, x2*(-3.96626e-05) + (3.93371e-02), if(x2 < 4.10992e+02, x2*(-6.43591e-05) + (4.84988e-02), if(x2 < 4.28035e+02, x2*(-2.06733e-04) + (1.07013e-01), if(x2 < 5.22015e+02, x2*(-1.50869e-05) + (2.49820e-02), if(x2 < 5.60631e+02, x2*(-2.72159e-05) + (3.13135e-02), if(x2 < 5.73991e+02, x2*(-1.21200e-03) + (6.95543e-01), if(x2 < 6.54318e+02, x2*(2.60900e-06) + (-1.63419e-03), if(x2 < 6.66501e+02, x2*(-6.52551e-06) + (4.34268e-03), if(x2 < 6.95618e+02, x2*(1.66909e-08) + (-1.76996e-05), if(x2 < 7.61002e+02, x2*(5.55617e-07) + (-3.92586e-04), if(x2 < 8.12669e+02, x2*(8.67482e-08) + (-3.57758e-05), if(x2 < 1.0796e+03, x2*(1.00719e-08) + (2.65367e-05), if(x2 < 1.29560e+03, x2*(-1.08636e-07) + (1.54694e-04), if(x2 < 1.34491e+03, x2*(8.35188e-07) + (-1.06813e-03), -0.001068126127568081)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 7.83982e+01, x2*(-1.4179e-06) + (1.78914e-04), if(x2 < 4.26950e+02, x2*(2.30210e-07) + (4.97057e-05), if(x2 < 4.38821e+02, x2*(5.70721e-05) + (-2.4219e-02), if(x2 < 5.59096e+02, x2*(-1.06614e-05) + (5.50392e-03), if(x2 < 5.71662e+02, x2*(1.40835e-04) + (-7.91972e-02), if(x2 < 5.99031e+02, x2*(-4.77765e-05) + (2.8625e-02), if(x2 < 1.17974e+03, x2*(4.63045e-08) + (-2.23551e-05), if(x2 < 1.34491e+03, x2*(-5.63042e-08) + (9.86968e-05), 9.869683979841515e-05))))))))",
}

!----------density profile for electrons----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 1.02091e+02, x2*(-4.4067e-01) + (9.01917e+01), if(x2 < 1.34688e+02, x2*(-2.37049e-01) + (6.94039e+01), if(x2 < 2.76089e+02, x2*(-1.16955e-01) + (5.32287e+01), if(x2 < 4.03714e+02, x2*(-6.13324e-02) + (3.78718e+01), if(x2 < 4.19991e+02, x2*(-5.47196e-01) + (2.34021e+02), if(x2 < 5.59172e+02, x2*(-3.06305e-03) + (5.49043e+00), if(x2 < 5.72810e+02, x2*(-1.72453e-01) + (1.00208e+02), if(x2 < 1.34491e+03, x2*(1.76773e-04) + (1.32442e+00), 1.3244242546073484))))))))",
}

!----------boundary conditions for electrons----------
spe_bound
{
 type(1:2,2) = "thermal","thermal",
 uth_bnd(1:3,1,2) = 0.05854417213511591,0.05854417213511591,0.05854417213511591,
 uth_bnd(1:3,2,2) = 0.058530942750059836,0.058530942750059836,0.058530942750059836,
}

!----------diagnostic for electrons----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15,
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -64, 0, ! phase space covers the entire domain. change as needed
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
   
!----------information for Aluminum ions----------
species
{
 name = "aluminum",
 rqm = 76,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Aluminum ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",
  spatial_uth(2) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",
  spatial_uth(3) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",

  spatial_ufl(1) = "if(x2 < 5.25494e+01, x2*(3.3707e-07) + (7.86483e-04), if(x2 < 1.51679e+02, x2*(-9.69723e-06) + (1.31378e-03), if(x2 < 3.28521e+02, x2*(2.79648e-06) + (-5.81257e-04), if(x2 < 3.52398e+02, x2*(1.04235e-05) + (-3.08688e-03), if(x2 < 4.52162e+02, x2*(-1.29844e-06) + (1.0439e-03), if(x2 < 4.70198e+02, x2*(1.59329e-06) + (-2.63635e-04), if(x2 < 4.93144e+02, x2*(1.43728e-05) + (-6.27252e-03), if(x2 < 5.02455e+02, x2*(-3.53052e-05) + (1.82259e-02), if(x2 < 7.43567e+02, x2*(6.92962e-07) + (1.38432e-04), if(x2 < 9.28026e+02, x2*(4.13346e-08) + (6.22960e-04), if(x2 < 9.63269e+02, x2*(-1.27648e-07) + (7.79781e-04), if(x2 < 9.64046e+02, x2*(4.36736e-06) + (-3.55012e-03), if(x2 < 1.05132e+03, x2*(-3.13608e-07) + (9.62549e-04), if(x2 < 1.22967e+03, x2*(1.46646e-07) + (4.78673e-04), if(x2 < 1.34491e+03, x2*(1.06462e-06) + (-6.50129e-04), -0.0006501293915137963)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 2.30352e+02, x2*(3.34876e-05) + (1.51446e-02), if(x2 < 2.88968e+02, x2*(2.68422e-05) + (1.66754e-02), if(x2 < 3.49413e+02, x2*(1.69046e-05) + (1.95471e-02), if(x2 < 3.92966e+02, x2*(-4.32774e-05) + (4.05755e-02), if(x2 < 3.94086e+02, x2*(-5.96971e-05) + (4.70279e-02), if(x2 < 4.26425e+02, x2*(-9.0621e-05) + (5.92145e-02), if(x2 < 4.31266e+02, x2*(-3.99171e-04) + (1.90788e-01), if(x2 < 4.62271e+02, x2*(-3.60399e-05) + (3.41819e-02), if(x2 < 5.55648e+02, x2*(-1.03599e-05) + (2.23108e-02), if(x2 < 5.62944e+02, x2*(9.84521e-04) + (-5.30493e-01), if(x2 < 5.63624e+02, x2*(-3.30851e-02) + (1.86488e+01), if(x2 < 6.13832e+02, x2*(-2.88781e-05) + (1.75143e-02), if(x2 < 6.64727e+02, x2*(4.16752e-06) + (-2.77012e-03), if(x2 < 9.65898e+02, x2*(-7.67417e-09) + (5.24537e-06), if(x2 < 1.34491e+03, x2*(1.07086e-07) + (-1.05601e-04), -0.00010560112598856872)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 3.70842e+02, x2*(1.00076e-07) + (9.29313e-05), if(x2 < 4.26987e+02, x2*(1.45465e-05) + (-5.26439e-03), if(x2 < 5.43906e+02, x2*(-1.27070e-05) + (6.3725e-03), if(x2 < 6.33765e+02, x2*(7.45468e-06) + (-4.59358e-03), if(x2 < 7.36097e+02, x2*(-1.10752e-06) + (8.32836e-04), if(x2 < 1.17148e+03, x2*(4.64441e-08) + (-1.65918e-05), if(x2 < 1.20132e+03, x2*(-6.21884e-07) + (7.66341e-04), if(x2 < 1.34491e+03, x2*(1.36003e-07) + (-1.44122e-04), -0.00014412160944185298))))))))",
}

!----------density profile for Aluminum ions----------
profile
{
 profile_type = "math func",
 math_func_expr = "if(x2 < 4.06219e+02, x2*(-4.13298e-16) + (1.75845e-13), if(x2 < 4.07873e+02, x2*(5.85691e+00) + (-2.37919e+03), if(x2 < 4.24053e+02, x2*(-3.48917e-01) + (1.51999e+02), if(x2 < 5.58976e+02, x2*(-1.38995e-03) + (4.62921e+00), if(x2 < 5.72866e+02, x2*(-1.75769e-01) + (1.02103e+02), if(x2 < 7.14438e+02, x2*(-3.27234e-04) + (1.59821e+00), if(x2 < 9.14696e+02, x2*(1.16491e-03) + (5.32172e-01), if(x2 < 1.34491e+03, x2*(-2.88989e-04) + (1.86204e+00), 1.8620440976053427))))))))",
}

!----------boundary conditions for Alumium ions----------
spe_bound
{
 type(1:2,2) = "thermal", "thermal",
 uth_bnd(1:3,1,2) = 0.005343884159142035,0.005343884159142035,0.005343884159142035,
 uth_bnd(1:3,2,2) = 0.005315645625864943,0.005315645625864943,0.005315645625864943,
}

!----------diagnostic for Aluminum ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15, 
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

!----------information for Silicon ions----------
species
{
 name = "silicon",
 rqm = 73,
 num_par_x(1:2) = 3, 3, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Silicon ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",
  spatial_uth(2) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",
  spatial_uth(3) = "if(x2 < 1.52263e+02, x2*(-7.27879e-06) + (5.43634e-03), if(x2 < 5.63523e+02, x2*(-2.28988e-06) + (4.67671e-03), if(x2 < 5.68933e+02, x2*(-2.94989e-04) + (1.69619e-01), if(x2 < 9.64537e+02, x2*(1.92036e-07) + (1.68102e-03), if(x2 < 1.34491e+03, x2*(-1.94526e-07) + (2.05388e-03), 0.0020538757112715587)))))",

  spatial_ufl(1) = "if(x2 < 5.25494e+01, x2*(3.3707e-07) + (7.86483e-04), if(x2 < 1.51679e+02, x2*(-9.69723e-06) + (1.31378e-03), if(x2 < 3.28521e+02, x2*(2.79648e-06) + (-5.81257e-04), if(x2 < 3.52398e+02, x2*(1.04235e-05) + (-3.08688e-03), if(x2 < 4.52162e+02, x2*(-1.29844e-06) + (1.0439e-03), if(x2 < 4.70198e+02, x2*(1.59329e-06) + (-2.63635e-04), if(x2 < 4.93144e+02, x2*(1.43728e-05) + (-6.27252e-03), if(x2 < 5.02455e+02, x2*(-3.53052e-05) + (1.82259e-02), if(x2 < 7.43567e+02, x2*(6.92962e-07) + (1.38432e-04), if(x2 < 9.28026e+02, x2*(4.13346e-08) + (6.22960e-04), if(x2 < 9.63269e+02, x2*(-1.27648e-07) + (7.79781e-04), if(x2 < 9.64046e+02, x2*(4.36736e-06) + (-3.55012e-03), if(x2 < 1.05132e+03, x2*(-3.13608e-07) + (9.62549e-04), if(x2 < 1.22967e+03, x2*(1.46646e-07) + (4.78673e-04), if(x2 < 1.34491e+03, x2*(1.06462e-06) + (-6.50129e-04), -0.0006501293915137963)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 2.30352e+02, x2*(3.34876e-05) + (1.51446e-02), if(x2 < 2.88968e+02, x2*(2.68422e-05) + (1.66754e-02), if(x2 < 3.49413e+02, x2*(1.69046e-05) + (1.95471e-02), if(x2 < 3.92966e+02, x2*(-4.32774e-05) + (4.05755e-02), if(x2 < 3.94086e+02, x2*(-5.96971e-05) + (4.70279e-02), if(x2 < 4.26425e+02, x2*(-9.0621e-05) + (5.92145e-02), if(x2 < 4.31266e+02, x2*(-3.99171e-04) + (1.90788e-01), if(x2 < 4.62271e+02, x2*(-3.60399e-05) + (3.41819e-02), if(x2 < 5.55648e+02, x2*(-1.03599e-05) + (2.23108e-02), if(x2 < 5.62944e+02, x2*(9.84521e-04) + (-5.30493e-01), if(x2 < 5.63624e+02, x2*(-3.30851e-02) + (1.86488e+01), if(x2 < 6.13832e+02, x2*(-2.88781e-05) + (1.75143e-02), if(x2 < 6.64727e+02, x2*(4.16752e-06) + (-2.77012e-03), if(x2 < 9.65898e+02, x2*(-7.67417e-09) + (5.24537e-06), if(x2 < 1.34491e+03, x2*(1.07086e-07) + (-1.05601e-04), -0.00010560112598856872)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 3.70842e+02, x2*(1.00076e-07) + (9.29313e-05), if(x2 < 4.26987e+02, x2*(1.45465e-05) + (-5.26439e-03), if(x2 < 5.43906e+02, x2*(-1.27070e-05) + (6.3725e-03), if(x2 < 6.33765e+02, x2*(7.45468e-06) + (-4.59358e-03), if(x2 < 7.36097e+02, x2*(-1.10752e-06) + (8.32836e-04), if(x2 < 1.17148e+03, x2*(4.64441e-08) + (-1.65918e-05), if(x2 < 1.20132e+03, x2*(-6.21884e-07) + (7.66341e-04), if(x2 < 1.34491e+03, x2*(1.36003e-07) + (-1.44122e-04), -0.00014412160944185298))))))))",
}

!----------density profile for Silicon ions----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 1.81641e+01, x2*(-5.74671e-01) + (9.14775e+01), if(x2 < 6.43934e+01, x2*(-4.05368e-01) + (8.84022e+01), if(x2 < 1.01021e+02, x2*(-4.59223e-01) + (9.18701e+01), if(x2 < 1.34635e+02, x2*(-2.37860e-01) + (6.95078e+01), if(x2 < 2.75897e+02, x2*(-1.16993e-01) + (5.32348e+01), if(x2 < 4.04850e+02, x2*(-6.14116e-02) + (3.79e+01), if(x2 < 4.12412e+02, x2*(-1.72415e+00) + (7.11059e+02), if(x2 < 1.34491e+03, x2*(1.09717e-09) + (-1.13759e-06), -1.137589654041396e-06))))))))",
}

!----------boundary conditions for Silicon ions----------
spe_bound
{
 type(1:2,2) = "thermal","thermal",
 uth_bnd(1:3,1,2) = 0.005343884159142035,0.005343884159142035,0.005343884159142035,
 uth_bnd(1:3,2,2) = 0.005315645625864943,0.005315645625864943,0.005315645625864943,
}

!----------diagnostic for Silicon ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15, 
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
