build_info = {
  "version": "4.4.4-301-g83444b7-dirty",
  "branch": "cathode-GPU",
  "dimensions": "2",
  "precision": "SINGLE",
  "build_type": "production",
  "system": "chablis.gnu.nvcc",
  "build_tool": "make",
  "build_flags": {
    "FPP"  :"/usr/bin/gcc-11 -C -E -x assembler-with-cpp -fopenmp -pthread -DHDF5 -DH5_HAVE_PARALLEL",
    "FPPF" :"-DP_X_DIM=2 -DOS_REV=\"4.4.4-301-g83444b7-dirty\" -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -DENABLE_PY_UTIL -DENABLE_CUDA -DENABLE_TILES",
    "F90"  :"/usr/bin/gfortran-11 -Wa,-q -cpp",
    "F90F" :"-pipe -fall-intrinsics -ffree-line-length-none -fno-range-check -Wl,-Bdynamic -fopenmp -pthread -Ofast -march=native -I/usr/lib/x86_64-1 -gnu/openmpi/lib/../../fortran/gfortran-mod-15/openmpi -I/usr/lib/x86_64-1 -gnu/openmpi/lib -I/usr/include/hdf5/openmpi -I/opt/anaconda3//include/python3.12",
    "CF"   :"-Ofast -march=native -std=c99  -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -D__POSIX_TIMER__ -I/opt/anaconda3//include/python3.12 -DENABLE_CUDA",
    "cc"   :"/usr/bin/gcc-11 -Wa,-q -I/usr/lib/x86_64-1 -gnu/openmpi/include -fopenmp -pthread",
    "LDF"  :"-pthread -lpthread -L/usr/lib/x86_64-1 -gnu/hdf5/openmpi -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 -lcrypto -lcurl -lsz -ldl -lz -lm -I/usr/lib/x86_64-1 -gnu/openmpi/lib -L/usr/lib/x86_64-1 -gnu/openmpi/lib/fortran/gfortran -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lopen-rte -lopen-pal -lhwloc -levent_core -levent_pthreads -lm -lz -L/usr/lib/x86_64-1 -gnu -lcudart -lcuda -lcurand -dlto -lstdc++ -Wl,-rpath,/opt/anaconda3//lib -L/opt/anaconda3//lib -lpython3.12",
    "NVCCF"  :"-DP_X_DIM=2 -DOS_REV=\"4.4.4-301-g83444b7-dirty\" -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -DENABLE_PY_UTIL -DENABLE_CUDA -DENABLE_TILES -I/usr/include -std=c++11 -dc -O3 -dlto -use_fast_math -extra-device-vectorization",
    "NVCCLDF"  :"-dlink",
   }
}
run_info = {
  "input_deck_crc":          107361621.,
  "input_deck": """

!----------global simulation parameters----------
simulation
{
 algorithm = "cuda",
}


!--------the node configuration for this simulation--------
node_conf 
{
 node_number = 1, 2, ! number of GPUs you are using
 n_threads = 1, ! number of threads per GPU
 tile_number = 32, 64, ! n_tiles_tot should be greater than n_cells_tot / 1024 and be a power of two. Refer to osiris cuda documentation
 if_periodic(1:2) = .true., .false.,
}


!----------spatial grid----------
grid
{
 nx_p = 761, 8000, ! number of cells 
}


!----------time step and global data dump timestep number----------
time_step
{
 dt     = 0.118, ! time step in wpe^-1
 ndump  = 512, ! number of time steps between data dumps,
}


!----------restart information----------
restart
{
  ndump_fac = -1,
  ndump_time = 3590, !once/hour
  if_restart = .false.,
  if_remold = .true.,
}


!----------spatial limits ----------
space
{
 xmin(1:2) = -64, 0,
 xmax(1:2) = 64, 1344,
}


!----------time limits ----------
time
{
 tmin = 0.0,
 tmax = 78140, ! Just to make your life easier, your upstream gyrotime for an rqm of 76 is 7814
}

!----------field solver set up----------
el_mag_fld
{
  type_init_b(1:3) = "math func", "math func", "math func",
  init_b_mfunc(1) = "if(x2 < 3.46711e+02, x2*(1.99776e-06) + (-1.56279e-04), if(x2 < 3.85656e+02, x2*(-3.32283e-04) + (1.15742e-01), if(x2 < 4.19454e+02, x2*(2.46054e-03) + (-9.61327e-01), if(x2 < 5.51341e+02, x2*(-1.87534e-04) + (1.49420e-01), if(x2 < 5.72865e+02, x2*(-1.42267e-03) + (8.30399e-01), if(x2 < 1.34491e+03, x2*(-2.08604e-07) + (1.55236e-02), 0.015523595127501979))))))",
  init_b_mfunc(2) = "if(x2 < 4.48596e+01, x2*(3.04773e-07) + (3.76145e-05), if(x2 < 2.36645e+02, x2*(-4.27159e-07) + (7.04488e-05), if(x2 < 3.81538e+02, x2*(9.19911e-07) + (-2.48329e-04), if(x2 < 4.37449e+02, x2*(-7.05191e-06) + (2.79323e-03), if(x2 < 4.79932e+02, x2*(2.71575e-05) + (-1.21717e-02), if(x2 < 5.18405e+02, x2*(-2.53698e-05) + (1.30379e-02), if(x2 < 5.49938e+02, x2*(3.91049e-05) + (-2.03861e-02), if(x2 < 5.55986e+02, x2*(-1.67446e-04) + (9.32042e-02), if(x2 < 1.06376e+03, x2*(6.49923e-08) + (7.01713e-05), if(x2 < 1.34491e+03, x2*(-3.23698e-08) + (1.73741e-04), 0.00017374073244138085))))))))))",
  init_b_mfunc(3) = "if(x2 < 1.29418e+02, x2*(2.53828e-07) + (-1.31745e-05), if(x2 < 4.38162e+02, x2*(-3.29204e-07) + (6.22803e-05), if(x2 < 4.63102e+02, x2*(1.84326e-05) + (-8.15842e-03), if(x2 < 4.88199e+02, x2*(-1.89921e-05) + (9.17304e-03), if(x2 < 5.19006e+02, x2*(3.46612e-06) + (-1.79105e-03), if(x2 < 5.27479e+02, x2*(1.11177e-04) + (-5.76938e-02), if(x2 < 5.48215e+02, x2*(-3.56845e-05) + (1.97727e-02), if(x2 < 5.86756e+02, x2*(-2.79536e-06) + (1.74237e-03), if(x2 < 9.49580e+02, x2*(-3.67113e-07) + (3.17577e-04), if(x2 < 1.34491e+03, x2*(-2.39211e-07) + (1.96123e-04), 0.0001961231119536791))))))))))",
  type_init_e(1:3) = "math func", "math func", "math func",
  init_e_mfunc(1) = "if(x2 < 5.04170e+02, x2*(6.95445e-11) + (8.89613e-09), if(x2 < 5.38469e+02, x2*(-4.77359e-08) + (2.4111e-05), if(x2 < 5.71100e+02, x2*(4.97623e-08) + (-2.83888e-05), if(x2 < 9.53326e+02, x2*(-1.00351e-10) + (8.77888e-08), if(x2 < 1.34491e+03, x2*(3.33302e-11) + (-3.96531e-08), -3.9653116413023835e-08)))))",
  init_e_mfunc(2) = "if(x2 < 3.31196e+02, x2*(6.13079e-10) + (-6.62645e-08), if(x2 < 4.07866e+02, x2*(-1.44408e-08) + (4.91950e-06), if(x2 < 4.25481e+02, x2*(-6.07907e-07) + (2.46974e-04), if(x2 < 4.79415e+02, x2*(2.01447e-07) + (-9.73904e-05), if(x2 < 5.13369e+02, x2*(9.44115e-08) + (-4.60758e-05), if(x2 < 6.20930e+02, x2*(-2.27018e-08) + (1.40465e-05), if(x2 < 1.08766e+03, x2*(-4.72653e-11) + (-2.03858e-08), if(x2 < 1.34491e+03, x2*(-3.76324e-11) + (-3.08631e-08), -3.086305184906483e-08))))))))",
  init_e_mfunc(3) = "if(x2 < 7.31882e+01, x2*(3.10443e-09) + (7.27253e-09), if(x2 < 2.54374e+02, x2*(-1.54145e-09) + (3.47296e-07), if(x2 < 2.7259e+02, x2*(4.05613e-07) + (-1.03222e-04), if(x2 < 3.93083e+02, x2*(-2.17191e-07) + (6.65477e-05), if(x2 < 4.09794e+02, x2*(1.26691e-05) + (-4.99885e-03), if(x2 < 5.59559e+02, x2*(-6.58623e-07) + (4.62785e-04), if(x2 < 5.76974e+02, x2*(-5.99433e-06) + (3.44843e-03), if(x2 < 6.13448e+02, x2*(2.87783e-07) + (-1.76189e-04), if(x2 < 1.15824e+03, x2*(-9.02149e-10) + (9.04562e-07), if(x2 < 1.34491e+03, x2*(1.57274e-09) + (-1.96197e-06), -1.9619652298616803e-06))))))))))", ! This is the most important component, can probably ignore others
}

!----------boundary conditions for em-fields ----------
emf_bound
{
 type(1:2,2) =  "reflecting", "open", ! boundaries for x2
}

!----------- electro-magnetic field diagnostics ---------
diag_emf
{
 ndump_fac = 1,
 reports = 
   "b1", "b2", "b3",
   "e1", "e2", "e3",
}

!----------number of particle species----------
particles
{
  interpolation = "quadratic",
  num_species = 3,
}

!----------information for electrons----------
species
{
 name = "electrons",
 rqm=-1.0,
 num_par_x(1:2) = 4, 4, ! number of particles per cell in x and y directions
}

!----------inital proper velocities - electrons-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 4.01404e+02, x2*(2.61653e-06) + (5.77584e-02), if(x2 < 4.24479e+02, x2*(9.83999e-04) + (-3.36172e-01), if(x2 < 5.61293e+02, x2*(1.49204e-04) + (1.81809e-02), if(x2 < 5.73291e+02, x2*(-4.80476e-03) + (2.79880e+00), if(x2 < 1.34491e+03, x2*(1.25715e-06) + (4.35601e-02), 0.04356008422613413)))))",
  spatial_uth(2) = "if(x2 < 4.01404e+02, x2*(2.61653e-06) + (5.77584e-02), if(x2 < 4.24479e+02, x2*(9.83999e-04) + (-3.36172e-01), if(x2 < 5.61293e+02, x2*(1.49204e-04) + (1.81809e-02), if(x2 < 5.73291e+02, x2*(-4.80476e-03) + (2.79880e+00), if(x2 < 1.34491e+03, x2*(1.25715e-06) + (4.35601e-02), 0.04356008422613413)))))",
  spatial_uth(3) = "if(x2 < 4.01404e+02, x2*(2.61653e-06) + (5.77584e-02), if(x2 < 4.24479e+02, x2*(9.83999e-04) + (-3.36172e-01), if(x2 < 5.61293e+02, x2*(1.49204e-04) + (1.81809e-02), if(x2 < 5.73291e+02, x2*(-4.80476e-03) + (2.79880e+00), if(x2 < 1.34491e+03, x2*(1.25715e-06) + (4.35601e-02), 0.04356008422613413)))))",

  spatial_ufl(1) = "if(x2 < 5.04527e+01, x2*(1.24197e-06) + (7.74345e-04), if(x2 < 1.48871e+02, x2*(-1.03692e-05) + (1.36016e-03), if(x2 < 3.61013e+02, x2*(3.29941e-06) + (-6.74698e-04), if(x2 < 7.26258e+02, x2*(3.10023e-07) + (4.04509e-04), if(x2 < 1.34491e+03, x2*(1.08767e-07) + (5.50672e-04), 0.0005506721793252469)))))",
  spatial_ufl(2) = "if(x2 < 1.38168e+02, x2*(2.96245e-05) + (1.53574e-02), if(x2 < 1.42985e+02, x2*(1.86401e-04) + (-6.30408e-03), if(x2 < 3.50522e+02, x2*(2.65284e-05) + (1.65553e-02), if(x2 < 3.66163e+02, x2*(-3.48489e-05) + (3.80694e-02), if(x2 < 4.3252e+02, x2*(-8.98574e-05) + (5.82115e-02), if(x2 < 4.5816e+02, x2*(-8.86336e-05) + (5.76822e-02), if(x2 < 4.8041e+02, x2*(4.00326e-05) + (-1.26755e-03), if(x2 < 5.60511e+02, x2*(-2.00656e-05) + (2.76042e-02), if(x2 < 5.70439e+02, x2*(-1.49877e-03) + (8.56435e-01), if(x2 < 6.04868e+02, x2*(-4.95607e-05) + (2.97479e-02), if(x2 < 6.64986e+02, x2*(4.33358e-06) + (-2.85100e-03), if(x2 < 9.29974e+02, x2*(6.49911e-09) + (2.64425e-05), if(x2 < 9.52294e+02, x2*(7.45033e-07) + (-6.60375e-04), if(x2 < 1.09133e+03, x2*(-1.7097e-07) + (2.11929e-04), if(x2 < 1.34491e+03, x2*(1.35685e-08) + (1.05374e-05), 1.0537376401824135e-05)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 5.99705e+01, x2*(-2.44483e-06) + (2.02640e-04), if(x2 < 2.29085e+02, x2*(4.09756e-07) + (3.14497e-05), if(x2 < 4.05663e+02, x2*(-1.82836e-07) + (1.67204e-04), if(x2 < 4.12409e+02, x2*(9.07741e-05) + (-3.67307e-02), if(x2 < 5.58160e+02, x2*(-6.97274e-06) + (3.58105e-03), if(x2 < 5.60918e+02, x2*(5.51514e-04) + (-3.08144e-01), if(x2 < 5.92809e+02, x2*(-3.68487e-05) + (2.18792e-02), if(x2 < 1.34491e+03, x2*(-1.99293e-08) + (4.6799e-05), 4.679899682182714e-05))))))))",
}

!----------density profile for electrons----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 9.76348e+00, x2*(-7.00720e-01) + (9.17614e+01), if(x2 < 1.16446e+02, x2*(-4.20479e-01) + (8.90253e+01), if(x2 < 2.68581e+02, x2*(-1.21742e-01) + (5.42386e+01), if(x2 < 4.03881e+02, x2*(-6.29171e-02) + (3.84393e+01), if(x2 < 4.19948e+02, x2*(-5.48992e-01) + (2.34755e+02), if(x2 < 5.59433e+02, x2*(-3.12099e-03) + (5.51794e+00), if(x2 < 5.72783e+02, x2*(-1.75769e-01) + (1.02103e+02), if(x2 < 1.34491e+03, x2*(1.77363e-04) + (1.32378e+00), 1.3237809647638823))))))))",
}

!----------boundary conditions for electrons----------
spe_bound
{
 type(1:2,2) = "reflecting","open",
}

!----------diagnostic for electrons----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2,
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0, ! phase space covers the entire domain. change as needed
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
   
!----------information for Aluminum ions----------
species
{
 name = "aluminum",
 rqm = 76,
 num_par_x(1:2) = 4, 4, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Aluminum ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",
  spatial_uth(2) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",
  spatial_uth(3) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",

  spatial_ufl(1) = "if(x2 < 7.13264e+01, x2*(-7.21275e-07) + (8.05014e-04), if(x2 < 7.96261e+01, x2*(-2.84503e-05) + (2.78283e-03), if(x2 < 1.40493e+02, x2*(-1.00216e-05) + (1.31542e-03), if(x2 < 2.26028e+02, x2*(1.25805e-06) + (-2.69283e-04), if(x2 < 3.13416e+02, x2*(3.20230e-06) + (-7.08739e-04), if(x2 < 3.21815e+02, x2*(1.41767e-05) + (-4.14829e-03), if(x2 < 3.77469e+02, x2*(2.80923e-06) + (-4.90076e-04), if(x2 < 4.65093e+02, x2*(-1.41837e-06) + (1.10571e-03), if(x2 < 4.88655e+02, x2*(1.07996e-05) + (-4.57678e-03), if(x2 < 5.34564e+02, x2*(-4.78267e-06) + (3.03757e-03), if(x2 < 7.45082e+02, x2*(8.73947e-07) + (1.37441e-05), if(x2 < 7.56178e+02, x2*(-7.26046e-08) + (7.19002e-04), if(x2 < 1.04409e+03, x2*(-5.40715e-08) + (7.04988e-04), if(x2 < 1.06982e+03, x2*(-1.52422e-06) + (2.23996e-03), if(x2 < 1.34491e+03, x2*(5.03601e-07) + (7.05623e-05), 7.056229251087938e-05)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 1.21844e+02, x2*(3.23908e-05) + (1.52540e-02), if(x2 < 3.21974e+02, x2*(3.18491e-05) + (1.53200e-02), if(x2 < 3.97072e+02, x2*(-2.32959e-05) + (3.30753e-02), if(x2 < 4.34252e+02, x2*(-1.49503e-04) + (8.31886e-02), if(x2 < 5.54806e+02, x2*(-1.49809e-05) + (2.47721e-02), if(x2 < 5.59711e+02, x2*(-2.59647e-03) + (1.457e+00), if(x2 < 5.65116e+02, x2*(2.33781e-03) + (-1.30478e+00), if(x2 < 5.72396e+02, x2*(-2.24188e-03) + (1.28328e+00), if(x2 < 8.14803e+02, x2*(-2.81198e-07) + (1.97278e-04), if(x2 < 8.43675e+02, x2*(7.27742e-07) + (-6.24810e-04), if(x2 < 9.1302e+02, x2*(2.11269e-07) + (-1.89075e-04), if(x2 < 9.72916e+02, x2*(8.11289e-08) + (-7.02545e-05), if(x2 < 1.15702e+03, x2*(2.44755e-08) + (-1.51355e-05), if(x2 < 1.16846e+03, x2*(-2.47332e-07) + (2.99351e-04), if(x2 < 1.34491e+03, x2*(2.01627e-07) + (-2.25237e-04), -0.00022523748164350255)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 1.48233e+02, x2*(-1.25248e-07) + (1.18584e-04), if(x2 < 3.34075e+02, x2*(-1.03452e-07) + (1.15353e-04), if(x2 < 4.41275e+02, x2*(6.72155e-06) + (-2.16471e-03), if(x2 < 5.67053e+02, x2*(-1.22671e-05) + (6.21448e-03), if(x2 < 5.9671e+02, x2*(2.74012e-05) + (-1.62795e-02), if(x2 < 9.90110e+02, x2*(-1.34424e-07) + (1.51242e-04), if(x2 < 1.26892e+03, x2*(5.06068e-08) + (-3.19582e-05), if(x2 < 1.34491e+03, x2*(6.27973e-08) + (-4.74269e-05), -4.742691454604601e-05))))))))",
}

!----------density profile for Aluminum ions----------
profile
{
 profile_type = "math func",
 math_func_expr = "if(x2 < 4.05638e+02, x2*(2.89330e-15) + (-1.04843e-12), if(x2 < 4.09754e+02, x2*(2.19367e+00) + (-8.89837e+02), if(x2 < 4.24053e+02, x2*(-3.48916e-01) + (1.51999e+02), if(x2 < 5.58976e+02, x2*(-1.38992e-03) + (4.6292e+00), if(x2 < 5.72866e+02, x2*(-1.75768e-01) + (1.02102e+02), if(x2 < 7.14312e+02, x2*(-3.27834e-04) + (1.59859e+00), if(x2 < 9.14889e+02, x2*(1.16326e-03) + (5.33485e-01), if(x2 < 1.34491e+03, x2*(-2.89280e-04) + (1.86239e+00), 1.8623948568555624))))))))",
}

!----------boundary conditions for Alumium ions----------
spe_bound
{
 type(1:2,2) = "reflecting", "open",
}

!----------diagnostic for Aluminum ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2, 
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

!----------information for Silicon ions----------
species
{
 name = "silicon",
 rqm = 73,
 num_par_x(1:2) = 4, 4, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Silicon ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",
  spatial_uth(2) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",
  spatial_uth(3) = "if(x2 < 1.75906e+02, x2*(-6.71284e-06) + (5.41169e-03), if(x2 < 5.42756e+02, x2*(-2.07344e-06) + (4.59559e-03), if(x2 < 5.96140e+02, x2*(-3.15629e-05) + (2.06011e-02), if(x2 < 1.24071e+03, x2*(1.18394e-07) + (1.71469e-03), if(x2 < 1.34491e+03, x2*(-9.30643e-07) + (3.01624e-03), 0.00301623743486172)))))",

  spatial_ufl(1) = "if(x2 < 7.13264e+01, x2*(-7.21275e-07) + (8.05014e-04), if(x2 < 7.96261e+01, x2*(-2.84503e-05) + (2.78283e-03), if(x2 < 1.40493e+02, x2*(-1.00216e-05) + (1.31542e-03), if(x2 < 2.26028e+02, x2*(1.25805e-06) + (-2.69283e-04), if(x2 < 3.13416e+02, x2*(3.20230e-06) + (-7.08739e-04), if(x2 < 3.21815e+02, x2*(1.41767e-05) + (-4.14829e-03), if(x2 < 3.77469e+02, x2*(2.80923e-06) + (-4.90076e-04), if(x2 < 4.65093e+02, x2*(-1.41837e-06) + (1.10571e-03), if(x2 < 4.88655e+02, x2*(1.07996e-05) + (-4.57678e-03), if(x2 < 5.34564e+02, x2*(-4.78267e-06) + (3.03757e-03), if(x2 < 7.45082e+02, x2*(8.73947e-07) + (1.37441e-05), if(x2 < 7.56178e+02, x2*(-7.26046e-08) + (7.19002e-04), if(x2 < 1.04409e+03, x2*(-5.40715e-08) + (7.04988e-04), if(x2 < 1.06982e+03, x2*(-1.52422e-06) + (2.23996e-03), if(x2 < 1.34491e+03, x2*(5.03601e-07) + (7.05623e-05), 7.056229251087938e-05)))))))))))))))",
  spatial_ufl(2) = "if(x2 < 1.21844e+02, x2*(3.23908e-05) + (1.52540e-02), if(x2 < 3.21974e+02, x2*(3.18491e-05) + (1.53200e-02), if(x2 < 3.97072e+02, x2*(-2.32959e-05) + (3.30753e-02), if(x2 < 4.34252e+02, x2*(-1.49503e-04) + (8.31886e-02), if(x2 < 5.54806e+02, x2*(-1.49809e-05) + (2.47721e-02), if(x2 < 5.59711e+02, x2*(-2.59647e-03) + (1.457e+00), if(x2 < 5.65116e+02, x2*(2.33781e-03) + (-1.30478e+00), if(x2 < 5.72396e+02, x2*(-2.24188e-03) + (1.28328e+00), if(x2 < 8.14803e+02, x2*(-2.81198e-07) + (1.97278e-04), if(x2 < 8.43675e+02, x2*(7.27742e-07) + (-6.24810e-04), if(x2 < 9.1302e+02, x2*(2.11269e-07) + (-1.89075e-04), if(x2 < 9.72916e+02, x2*(8.11289e-08) + (-7.02545e-05), if(x2 < 1.15702e+03, x2*(2.44755e-08) + (-1.51355e-05), if(x2 < 1.16846e+03, x2*(-2.47332e-07) + (2.99351e-04), if(x2 < 1.34491e+03, x2*(2.01627e-07) + (-2.25237e-04), -0.00022523748164350255)))))))))))))))",
  spatial_ufl(3) = "if(x2 < 1.48233e+02, x2*(-1.25248e-07) + (1.18584e-04), if(x2 < 3.34075e+02, x2*(-1.03452e-07) + (1.15353e-04), if(x2 < 4.41275e+02, x2*(6.72155e-06) + (-2.16471e-03), if(x2 < 5.67053e+02, x2*(-1.22671e-05) + (6.21448e-03), if(x2 < 5.9671e+02, x2*(2.74012e-05) + (-1.62795e-02), if(x2 < 9.90110e+02, x2*(-1.34424e-07) + (1.51242e-04), if(x2 < 1.26892e+03, x2*(5.06068e-08) + (-3.19582e-05), if(x2 < 1.34491e+03, x2*(6.27973e-08) + (-4.74269e-05), -4.742691454604601e-05))))))))",
}

!----------density profile for Silicon ions----------
profile
{
  profile_type = "math func",
  math_func_expr = "if(x2 < 8.61807e+00, x2*(-7.00754e-01) + (9.17615e+01), if(x2 < 1.03936e+02, x2*(-4.29492e-01) + (8.94237e+01), if(x2 < 1.34219e+02, x2*(-2.37780e-01) + (6.9498e+01), if(x2 < 2.68774e+02, x2*(-1.18094e-01) + (5.34337e+01), if(x2 < 3.79491e+02, x2*(-6.69292e-02) + (3.96820e+01), if(x2 < 4.04783e+02, x2*(-9.00676e-03) + (1.7701e+01), if(x2 < 4.08878e+02, x2*(-3.43239e+00) + (1.40343e+03), if(x2 < 1.34491e+03, x2*(3.89414e-10) + (-4.033e-07), -4.03299940040292e-07))))))))",
}

!----------boundary conditions for Silicon ions----------
spe_bound
{
 type(1:2,2) = "reflecting","open",
}

!----------diagnostic for Silicon ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.2, -0.2, -0.2, 
 ps_pmax(1:3) = 0.2, 0.2, 0.2,
 ps_xmin(1:2) = -64, 0,
 ps_xmax(1:2) = 64, 1344,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

"""
}
