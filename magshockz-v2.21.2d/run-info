build_info = {
  "version": "4.4.4-301-g83444b7-dirty",
  "branch": "cathode-GPU",
  "dimensions": "2",
  "precision": "SINGLE",
  "build_type": "production",
  "system": "chablis.gnu.nvcc",
  "build_tool": "make",
  "build_flags": {
    "FPP"  :"/usr/bin/gcc-11 -C -E -x assembler-with-cpp -fopenmp -pthread -DHDF5 -DH5_HAVE_PARALLEL",
    "FPPF" :"-DP_X_DIM=2 -DOS_REV=\"4.4.4-301-g83444b7-dirty\" -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -DENABLE_PY_UTIL -DENABLE_CUDA -DENABLE_TILES",
    "F90"  :"/usr/bin/gfortran-11 -Wa,-q -cpp",
    "F90F" :"-pipe -fall-intrinsics -ffree-line-length-none -fno-range-check -Wl,-Bdynamic -fopenmp -pthread -Ofast -march=native -I/usr/lib/x86_64-1 -gnu/openmpi/lib/../../fortran/gfortran-mod-15/openmpi -I/usr/lib/x86_64-1 -gnu/openmpi/lib -I/usr/include/hdf5/openmpi -I/opt/anaconda3//include/python3.12",
    "CF"   :"-Ofast -march=native -std=c99  -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -D__POSIX_TIMER__ -I/opt/anaconda3//include/python3.12 -DENABLE_CUDA",
    "cc"   :"/usr/bin/gcc-11 -Wa,-q -I/usr/lib/x86_64-1 -gnu/openmpi/include -fopenmp -pthread",
    "LDF"  :"-pthread -lpthread -L/usr/lib/x86_64-1 -gnu/hdf5/openmpi -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 -lcrypto -lcurl -lsz -ldl -lz -lm -I/usr/lib/x86_64-1 -gnu/openmpi/lib -L/usr/lib/x86_64-1 -gnu/openmpi/lib/fortran/gfortran -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lopen-rte -lopen-pal -lhwloc -levent_core -levent_pthreads -lm -lz -L/usr/lib/x86_64-1 -gnu -lcudart -lcuda -lcurand -dlto -lstdc++ -Wl,-rpath,/opt/anaconda3//lib -L/opt/anaconda3//lib -lpython3.12",
    "NVCCF"  :"-DP_X_DIM=2 -DOS_REV=\"4.4.4-301-g83444b7-dirty\" -DFORTRANSINGLEUNDERSCORE -DPRECISION_SINGLE -DSIMD -DSIMD_AVX2 -DENABLE_PY_UTIL -DENABLE_CUDA -DENABLE_TILES -I/usr/include -std=c++11 -dc -O3 -dlto -use_fast_math -extra-device-vectorization",
    "NVCCLDF"  :"-dlink",
   }
}
run_info = {
  "input_deck_crc":          550565684.,
  "input_deck": """

!----------global simulation parameters----------
simulation
{
 algorithm = "cuda",
}


!--------the node configuration for this simulation--------
node_conf 
{
 node_number = 2, 1, ! number of GPUs you are using
 n_threads = 1, ! number of threads per GPU
 tile_number = 4, 64, ! n_tiles_tot should be greater than n_cells_tot / 1024 and be a power of two. Refer to osiris cuda documentation
 if_periodic(1:2) = .true., .false.,
}


!----------spatial grid----------
grid
{
 nx_p = 46, 11630, ! number of cells 
}


!----------time step and global data dump timestep number----------
time_step
{
 dt     = 0.202, ! time step in wpe^-1
 ndump  = 566, ! number of time steps between data dumps,
}


!----------restart information----------
restart
{
  ndump_fac = -1,
  ndump_time = 3590, !once/hour
  if_restart = .false.,
  if_remold = .true.,
}


!----------spatial limits ----------
space
{
 xmin(1:2) = -7, 0,
 xmax(1:2) = 7, 3489,
 !if_move(1:2) = .false., .false.,
 !move_u = -0.01,
}


!----------time limits ----------
time
{
 tmin = 0.0,
 tmax = 58605, ! Just to make your life easier, your upstream gyrotime for an rqm of 38 is 3907
}

!----------field solver set up----------
el_mag_fld
{
  type_init_b(1:3) = "math func", "math func", "math func",
  init_b_mfunc(1) = "if(x2 < 1.43889e+02, x2*(-7.48735e-07) + (9.03012e-05), if(x2 < 2.62606e+02, x2*(7.23430e-06) + (-1.05837e-03), if(x2 < 3.02022e+02, x2*(-3.29349e-04) + (8.73303e-02), if(x2 < 3.35095e+02, x2*(2.52253e-03) + (-7.74e-01), if(x2 < 4.71733e+02, x2*(-2.00044e-04) + (1.38321e-01), if(x2 < 4.89768e+02, x2*(-1.6145e-03) + (8.05565e-01), if(x2 < 5.66953e+02, x2*(6.88817e-06) + (1.14624e-02), if(x2 < 1.16309e+03, x2*(-1.73709e-07) + (1.54661e-02), if(x2 < 2.84094e+03, x2*(4.19506e-07) + (1.47761e-02), if(x2 < 3.48919e+03, x2*(2.33340e-06) + (9.33888e-03), 0.009338877721660113))))))))))",
  init_b_mfunc(2) = "if(x2 < 3.63474e+02, x2*(-2.52731e-07) + (4.32748e-05), if(x2 < 3.96925e+02, x2*(2.67346e-05) + (-9.76593e-03), if(x2 < 4.32981e+02, x2*(-1.84873e-05) + (8.18377e-03), if(x2 < 9.34372e+02, x2*(-1.32403e-07) + (2.36466e-04), if(x2 < 1.08898e+03, x2*(1.28031e-07) + (-6.87602e-06), if(x2 < 1.56059e+03, x2*(5.21544e-08) + (7.57522e-05), if(x2 < 1.98562e+03, x2*(-3.88608e-07) + (7.63601e-04), if(x2 < 2.294e+03, x2*(-5.05126e-08) + (9.22716e-05), if(x2 < 3.13618e+03, x2*(-1.04487e-07) + (2.16089e-04), if(x2 < 3.48919e+03, x2*(1.15334e-07) + (-4.73308e-04), -0.00047330820230852066))))))))))",
  init_b_mfunc(3) = "if(x2 < 1.24603e+02, x2*(-5.20459e-07) + (1.10163e-05), if(x2 < 4.72534e+02, x2*(5.18415e-07) + (-1.18430e-04), if(x2 < 1.21580e+03, x2*(-3.48085e-07) + (2.91021e-04), if(x2 < 1.89413e+03, x2*(3.54644e-07) + (-5.63359e-04), if(x2 < 2.18917e+03, x2*(-9.02176e-07) + (1.81722e-03), if(x2 < 2.48414e+03, x2*(6.39347e-07) + (-1.55744e-03), if(x2 < 2.57856e+03, x2*(3.69948e-07) + (-8.8822e-04), if(x2 < 2.66239e+03, x2*(2.37172e-07) + (-5.45848e-04), if(x2 < 3.00653e+03, x2*(-1.04263e-06) + (2.86148e-03), if(x2 < 3.48919e+03, x2*(8.51703e-07) + (-2.83388e-03), -0.002833880260315306))))))))))",
  type_init_e(1:3) = "math func", "math func", "math func",
  init_e_mfunc(1) = "if(x2 < 3.19814e+02, x2*(3.37048e-09) + (-1.35889e-07), if(x2 < 4.32742e+02, x2*(-2.65445e-08) + (9.43134e-06), if(x2 < 4.55574e+02, x2*(-6.40333e-07) + (2.75043e-04), if(x2 < 4.85396e+02, x2*(5.65750e-07) + (-2.74417e-04), if(x2 < 1.09177e+03, x2*(-3.63958e-10) + (3.72122e-07), if(x2 < 2.35700e+03, x2*(3.92054e-11) + (-6.80408e-08), if(x2 < 2.63188e+03, x2*(-2.0487e-10) + (5.07244e-07), if(x2 < 3.04744e+03, x2*(2.34239e-10) + (-6.48436e-07), if(x2 < 3.05508e+03, x2*(-2.32447e-09) + (7.14909e-06), if(x2 < 3.48919e+03, x2*(-1.9141e-10) + (6.32418e-07), 6.324180799947011e-07))))))))))",
  init_e_mfunc(2) = "if(x2 < 2.98727e+02, x2*(2.36687e-08) + (-2.24696e-06), if(x2 < 3.39901e+02, x2*(-2.29512e-06) + (6.90438e-04), if(x2 < 4.51946e+02, x2*(1.15711e-06) + (-4.82977e-04), if(x2 < 5.04331e+02, x2*(-7.66748e-07) + (3.86504e-04), if(x2 < 7.45465e+02, x2*(-2.49354e-09) + (1.06658e-06), if(x2 < 1.26321e+03, x2*(4.19113e-10) + (-1.1047e-06), if(x2 < 1.49486e+03, x2*(-8.00692e-09) + (9.53919e-06), if(x2 < 2.10339e+03, x2*(3.80964e-10) + (-2.99951e-06), if(x2 < 2.45644e+03, x2*(2.95251e-09) + (-8.40846e-06), if(x2 < 3.48919e+03, x2*(-2.5571e-11) + (-1.09299e-06), -1.092985723841238e-06))))))))))",
  init_e_mfunc(3) = "if(x2 < 3.03996e+02, x2*(-3.17773e-07) + (3.22158e-05), if(x2 < 3.41566e+02, x2*(5.95553e-05) + (-1.8169e-02), if(x2 < 4.75548e+02, x2*(-1.30497e-05) + (6.63046e-03), if(x2 < 6.41129e+02, x2*(-3.12017e-06) + (1.90851e-03), if(x2 < 8.82837e+02, x2*(4.62449e-07) + (-3.88409e-04), if(x2 < 1.23532e+03, x2*(-6.69736e-08) + (7.89851e-05), if(x2 < 1.74887e+03, x2*(1.31633e-08) + (-2.00095e-05), if(x2 < 2.24292e+03, x2*(-1.96629e-09) + (6.45018e-06), if(x2 < 3.00333e+03, x2*(2.53720e-09) + (-3.65079e-06), if(x2 < 3.48919e+03, x2*(8.35791e-10) + (1.45911e-06), 1.4591071717203715e-06))))))))))", ! This is the most important component, can probably ignore others
}

!----------boundary conditions for em-fields ----------
emf_bound
{
 type(1:2,2) =  "pmc", "vpml", ! boundaries for x2
 vpml_diffuse(2,2) = .false.,
 vpml_bnd_size = 50,
}

!----------- electro-magnetic field diagnostics ---------
diag_emf
{
 ndump_fac = 1,
 reports = 
   "b1", "b2", "b3",
   "e1", "e2", "e3",
}

!----------number of particle species----------
particles
{
  interpolation = "cubic",
  num_species = 3,
}

!----------information for electrons----------
species
{
 name = "electrons",
 rqm=-1.0,
 num_par_x(1:2) = 16, 16, ! number of particles per cell in x and y directions
}

!----------inital proper velocities - electrons-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 3.27425e+02, x2*(7.93089e-06) + (5.71014e-02), if(x2 < 3.31599e+02, x2*(4.83964e-03) + (-1.52492e+00), if(x2 < 4.77159e+02, x2*(1.52133e-04) + (2.94501e-02), if(x2 < 4.87095e+02, x2*(-4.85248e-03) + (2.41745e+00), if(x2 < 4.93796e+02, x2*(-1.18676e-03) + (6.31890e-01), if(x2 < 8.08071e+02, x2*(-8.42083e-06) + (5.00310e-02), if(x2 < 1.26617e+03, x2*(7.89128e-06) + (3.68497e-02), if(x2 < 2.78542e+03, x2*(-1.01568e-06) + (4.81274e-02), if(x2 < 3.11099e+03, x2*(-2.11559e-05) + (1.04226e-01), if(x2 < 3.48919e+03, x2*(-3.67577e-05) + (1.52764e-01), 0.1527635981776163))))))))))",
  spatial_uth(2) = "if(x2 < 3.27425e+02, x2*(7.93089e-06) + (5.71014e-02), if(x2 < 3.31599e+02, x2*(4.83964e-03) + (-1.52492e+00), if(x2 < 4.77159e+02, x2*(1.52133e-04) + (2.94501e-02), if(x2 < 4.87095e+02, x2*(-4.85248e-03) + (2.41745e+00), if(x2 < 4.93796e+02, x2*(-1.18676e-03) + (6.31890e-01), if(x2 < 8.08071e+02, x2*(-8.42083e-06) + (5.00310e-02), if(x2 < 1.26617e+03, x2*(7.89128e-06) + (3.68497e-02), if(x2 < 2.78542e+03, x2*(-1.01568e-06) + (4.81274e-02), if(x2 < 3.11099e+03, x2*(-2.11559e-05) + (1.04226e-01), if(x2 < 3.48919e+03, x2*(-3.67577e-05) + (1.52764e-01), 0.1527635981776163))))))))))",
  spatial_uth(3) = "if(x2 < 3.27425e+02, x2*(7.93089e-06) + (5.71014e-02), if(x2 < 3.31599e+02, x2*(4.83964e-03) + (-1.52492e+00), if(x2 < 4.77159e+02, x2*(1.52133e-04) + (2.94501e-02), if(x2 < 4.87095e+02, x2*(-4.85248e-03) + (2.41745e+00), if(x2 < 4.93796e+02, x2*(-1.18676e-03) + (6.31890e-01), if(x2 < 8.08071e+02, x2*(-8.42083e-06) + (5.00310e-02), if(x2 < 1.26617e+03, x2*(7.89128e-06) + (3.68497e-02), if(x2 < 2.78542e+03, x2*(-1.01568e-06) + (4.81274e-02), if(x2 < 3.11099e+03, x2*(-2.11559e-05) + (1.04226e-01), if(x2 < 3.48919e+03, x2*(-3.67577e-05) + (1.52764e-01), 0.1527635981776163))))))))))",

  spatial_ufl(1) = "if(x2 < 8.18676e+01, x2*(-9.07338e-06) + (5.6989e-04), if(x2 < 3.30807e+02, x2*(3.97472e-06) + (-4.98326e-04), if(x2 < 9.6809e+02, x2*(2.02452e-07) + (7.49567e-04), if(x2 < 1.04058e+03, x2*(-1.97124e-06) + (2.8539e-03), if(x2 < 1.48427e+03, x2*(1.55137e-06) + (-8.11667e-04), if(x2 < 1.93504e+03, x2*(1.43557e-06) + (-6.39782e-04), if(x2 < 2.36326e+03, x2*(6.86440e-07) + (8.09811e-04), if(x2 < 3.10292e+03, x2*(1.1516e-07) + (2.1599e-03), if(x2 < 3.15027e+03, x2*(-5.6714e-06) + (2.01151e-02), if(x2 < 3.48919e+03, x2*(1.13829e-06) + (-1.33718e-03), -0.001337180912709362))))))))))",
  spatial_ufl(2) = "if(x2 < 7.03136e+01, x2*(6.43526e-05) + (2.47116e-02), if(x2 < 2.86158e+02, x2*(3.60140e-05) + (2.67042e-02), if(x2 < 2.87890e+02, x2*(-8.46674e-04) + (2.79293e-01), if(x2 < 3.67159e+02, x2*(-1.38189e-04) + (7.53271e-02), if(x2 < 3.87188e+02, x2*(3.37892e-05) + (1.21835e-02), if(x2 < 4.71733e+02, x2*(-2.28717e-05) + (3.4122e-02), if(x2 < 4.81317e+02, x2*(-8.92574e-04) + (4.44389e-01), if(x2 < 4.90476e+02, x2*(-1.61486e-03) + (7.92036e-01), if(x2 < 2.53159e+03, x2*(1.00227e-07) + (-6.14347e-05), if(x2 < 3.48919e+03, x2*(6.72381e-08) + (2.20786e-05), 2.2078631501418894e-05))))))))))",
  spatial_ufl(3) = "if(x2 < 3.42969e+02, x2*(5.95137e-07) + (8.08118e-05), if(x2 < 3.50090e+02, x2*(1.76793e-04) + (-6.03495e-02), if(x2 < 4.29589e+02, x2*(-2.51701e-05) + (1.03557e-02), if(x2 < 4.82138e+02, x2*(1.06162e-05) + (-5.01773e-03), if(x2 < 1.32421e+03, x2*(-1.10176e-07) + (1.53851e-04), if(x2 < 1.57076e+03, x2*(7.68889e-07) + (-1.01022e-03), if(x2 < 2.30726e+03, x2*(-1.79503e-07) + (4.79474e-04), if(x2 < 2.35970e+03, x2*(5.15356e-07) + (-1.12374e-03), if(x2 < 3.28266e+03, x2*(-6.36838e-08) + (2.42620e-04), if(x2 < 3.48919e+03, x2*(4.00895e-07) + (-1.28243e-03), -0.0012824325901853047))))))))))",
}

!----------density profile for electrons----------
profile
{
  profile_type(1:2) = "uniform", "piecewise-linear",
  num_x = 59,
  x(1:59,2) = 0., 58.15, 116.31, 174.46, 232.61, 290.77, 348.92, 407.07, 465.23, 523.38, 581.53, 639.69, 697.84, 755.99, 814.14, 872.3, 930.45, 988.60, 1046.76, 1104.91, 1163.06, 1221.22, 1279.37, 1337.52, 1395.68, 1453.83, 1511.98, 1570.14, 1628.29, 1686.44, 1744.6, 1802.75, 1860.90, 1919.06, 1977.21, 2035.36, 2093.52, 2151.67, 2209.82, 2267.98, 2326.13, 2384.28, 2442.43, 2500.59, 2558.74, 2616.89, 2675.05, 2733.20, 2791.35, 2849.51, 2907.66, 2965.81, 3023.97, 3082.12, 3140.27, 3198.43, 3256.58, 3314.73, 3372.89,
  fx(1:59,2) = 54.49, 37.15, 30.13, 23.30, 18.60, 14.70, 4.09, 3.89, 3.92, 1.4, 1.38, 1.37, 1.44, 1.52, 1.57, 1.59, 1.53, 1.55, 1.58, 1.56, 1.49, 1.45, 1.46, 1.45, 1.44, 1.42, 1.42, 1.44, 1.42, 1.41, 1.39, 1.41, 1.4, 1.39, 1.37, 1.4, 1.39, 1.37, 1.38, 1.38, 1.39, 1.38, 1.43, 1.42, 1.43, 1.44, 1.45, 1.47, 1.48, 1.52, 1.57, 1.65, 1.74, 1.90, 2.03, 2.23, 2.42, 2.64, 3.01,
}

!----------boundary conditions for electrons----------
spe_bound
{
 type(1:2,2) = "thermal","thermal",
 uth_bnd(1:3,1,2) = 0.05821496391274283,0.05821496391274283,0.05821496391274283,
 uth_bnd(1:3,2,2) = 0.05816689794170529,0.05816689794170529,0.05816689794170529,
}

!----------diagnostic for electrons----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15,
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -7, 0, ! phase space covers the entire domain. change as needed
 ps_xmax(1:2) = 7, 3489,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}
   
!----------information for Aluminum ions----------
species
{
 name = "aluminum",
 rqm = 38,
 num_par_x(1:2) = 16, 16, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Aluminum ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",
  spatial_uth(2) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",
  spatial_uth(3) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",

  spatial_ufl(1) = "if(x2 < 1.00208e+02, x2*(-7.51444e-06) + (5.22061e-04), if(x2 < 2.68514e+02, x2*(5.73839e-06) + (-8.05976e-04), if(x2 < 9.47096e+02, x2*(2.93016e-07) + (6.56184e-04), if(x2 < 1.2406e+03, x2*(3.77015e-07) + (5.76629e-04), if(x2 < 1.88918e+03, x2*(1.70343e-06) + (-1.06892e-03), if(x2 < 2.77182e+03, x2*(4.43325e-07) + (1.31165e-03), if(x2 < 2.85865e+03, x2*(-5.09120e-07) + (3.95165e-03), if(x2 < 2.87591e+03, x2*(5.88695e-06) + (-1.43325e-02), if(x2 < 3.23443e+03, x2*(-8.40908e-07) + (5.01625e-03), if(x2 < 3.48919e+03, x2*(1.44997e-06) + (-2.39343e-03), -0.0023934287713336354))))))))))",
  spatial_ufl(2) = "if(x2 < 2.67614e+02, x2*(4.22380e-05) + (2.56177e-02), if(x2 < 2.93424e+02, x2*(-8.53887e-05) + (5.97723e-02), if(x2 < 3.72393e+02, x2*(-1.27628e-04) + (7.21664e-02), if(x2 < 4.76278e+02, x2*(-1.06896e-05) + (2.86193e-02), if(x2 < 4.85736e+02, x2*(-2.37342e-03) + (1.15394e+00), if(x2 < 5.55088e+02, x2*(-1.93960e-05) + (1.05035e-02), if(x2 < 6.22648e+02, x2*(4.25518e-06) + (-2.62499e-03), if(x2 < 7.00850e+02, x2*(-3.81243e-07) + (2.61862e-04), if(x2 < 2.35505e+03, x2*(1.06451e-07) + (-7.99380e-05), if(x2 < 3.48919e+03, x2*(6.89907e-08) + (8.28308e-06), 8.28308392060426e-06))))))))))",
  spatial_ufl(3) = "if(x2 < 2.43229e+02, x2*(-5.84106e-07) + (1.80456e-04), if(x2 < 3.37298e+02, x2*(1.32672e-05) + (-3.18860e-03), if(x2 < 4.26032e+02, x2*(-1.94405e-05) + (7.84365e-03), if(x2 < 5.69506e+02, x2*(3.47009e-06) + (-1.91698e-03), if(x2 < 6.95563e+02, x2*(-9.15555e-08) + (1.11399e-04), if(x2 < 2.39563e+03, x2*(5.48825e-08) + (9.54200e-06), if(x2 < 2.40457e+03, x2*(-8.27134e-06) + (1.99561e-02), if(x2 < 2.60131e+03, x2*(2.65607e-07) + (-5.71527e-04), if(x2 < 3.09012e+03, x2*(-2.22108e-07) + (6.97175e-04), if(x2 < 3.48919e+03, x2*(2.45923e-07) + (-7.49098e-04), -0.0007490981037785037))))))))))",
}

!----------density profile for Aluminum ions----------
profile
{
  profile_type(1:2) = "uniform", "piecewise-linear",
  num_x = 59,
  x(1:59,2) = 0., 58.15, 116.31, 174.46, 232.61, 290.77, 348.92, 407.07, 465.23, 523.38, 581.53, 639.69, 697.84, 755.99, 814.14, 872.3, 930.45, 988.60, 1046.76, 1104.91, 1163.06, 1221.22, 1279.37, 1337.52, 1395.68, 1453.83, 1511.98, 1570.14, 1628.29, 1686.44, 1744.6, 1802.75, 1860.90, 1919.06, 1977.21, 2035.36, 2093.52, 2151.67, 2209.82, 2267.98, 2326.13, 2384.28, 2442.43, 2500.59, 2558.74, 2616.89, 2675.05, 2733.20, 2791.35, 2849.51, 2907.66, 2965.81, 3023.97, 3082.12, 3140.27, 3198.43, 3256.58, 3314.73, 3372.89,
  fx(1:59,2) = 0., 0., 0., 0., 0., 0., 4.09, 3.89, 3.92, 1.4, 1.38, 1.37, 1.44, 1.52, 1.57, 1.59, 1.53, 1.55, 1.58, 1.56, 1.49, 1.45, 1.46, 1.45, 1.44, 1.42, 1.42, 1.44, 1.42, 1.41, 1.39, 1.41, 1.4, 1.39, 1.37, 1.4, 1.39, 1.37, 1.38, 1.38, 1.39, 1.38, 1.43, 1.42, 1.43, 1.44, 1.45, 1.47, 1.48, 1.52, 1.57, 1.65, 1.74, 1.90, 2.03, 2.23, 2.42, 2.64, 3.01,
}

!----------boundary conditions for Alumium ions----------
spe_bound
{
 type(1:2,2) = "thermal", "thermal",
 uth_bnd(1:3,1,2) = 0.006929304075270467,0.006929304075270467,0.006929304075270467,
 uth_bnd(1:3,2,2) = 0.00679802522524855,0.00679802522524855,0.00679802522524855,
}

!----------diagnostic for Aluminum ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15, 
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -7, 0,
 ps_xmax(1:2) = 7, 3489,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

!----------information for Silicon ions----------
species
{
 name = "silicon",
 rqm = 36,
 num_par_x(1:2) = 16, 16, ! number of particles per cell in x and y directions
}

!----------inital proper velocities Silicon ions-----------------
udist
{
  use_spatial_uth = .true.,
  use_spatial_ufl = .true.,
  spatial_uth(1) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",
  spatial_uth(2) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",
  spatial_uth(3) = "if(x2 < 2.91865e+02, x2*(-5.30609e-06) + (6.6878e-03), if(x2 < 4.6062e+02, x2*(3.20735e-07) + (5.04553e-03), if(x2 < 4.98041e+02, x2*(-7.15483e-05) + (3.81498e-02), if(x2 < 8.164e+02, x2*(3.81034e-07) + (2.32603e-03), if(x2 < 1.05636e+03, x2*(-2.33333e-07) + (2.8276e-03), if(x2 < 1.65551e+03, x2*(-1.25317e-07) + (2.71349e-03), if(x2 < 1.90842e+03, x2*(-8.54344e-08) + (2.64747e-03), if(x2 < 2.62658e+03, x2*(-7.16367e-08) + (2.62114e-03), if(x2 < 3.11619e+03, x2*(8.22677e-07) + (2.7215e-04), if(x2 < 3.48919e+03, x2*(2.0885e-06) + (-3.67238e-03), -0.0036723834146479934))))))))))",

  spatial_ufl(1) = "if(x2 < 1.00208e+02, x2*(-7.51444e-06) + (5.22061e-04), if(x2 < 2.68514e+02, x2*(5.73839e-06) + (-8.05976e-04), if(x2 < 9.47096e+02, x2*(2.93016e-07) + (6.56184e-04), if(x2 < 1.2406e+03, x2*(3.77015e-07) + (5.76629e-04), if(x2 < 1.88918e+03, x2*(1.70343e-06) + (-1.06892e-03), if(x2 < 2.77182e+03, x2*(4.43325e-07) + (1.31165e-03), if(x2 < 2.85865e+03, x2*(-5.09120e-07) + (3.95165e-03), if(x2 < 2.87591e+03, x2*(5.88695e-06) + (-1.43325e-02), if(x2 < 3.23443e+03, x2*(-8.40908e-07) + (5.01625e-03), if(x2 < 3.48919e+03, x2*(1.44997e-06) + (-2.39343e-03), -0.0023934287713336354))))))))))",
  spatial_ufl(2) = "if(x2 < 2.67614e+02, x2*(4.22380e-05) + (2.56177e-02), if(x2 < 2.93424e+02, x2*(-8.53887e-05) + (5.97723e-02), if(x2 < 3.72393e+02, x2*(-1.27628e-04) + (7.21664e-02), if(x2 < 4.76278e+02, x2*(-1.06896e-05) + (2.86193e-02), if(x2 < 4.85736e+02, x2*(-2.37342e-03) + (1.15394e+00), if(x2 < 5.55088e+02, x2*(-1.93960e-05) + (1.05035e-02), if(x2 < 6.22648e+02, x2*(4.25518e-06) + (-2.62499e-03), if(x2 < 7.00850e+02, x2*(-3.81243e-07) + (2.61862e-04), if(x2 < 2.35505e+03, x2*(1.06451e-07) + (-7.99380e-05), if(x2 < 3.48919e+03, x2*(6.89907e-08) + (8.28308e-06), 8.28308392060426e-06))))))))))",
  spatial_ufl(3) = "if(x2 < 2.43229e+02, x2*(-5.84106e-07) + (1.80456e-04), if(x2 < 3.37298e+02, x2*(1.32672e-05) + (-3.18860e-03), if(x2 < 4.26032e+02, x2*(-1.94405e-05) + (7.84365e-03), if(x2 < 5.69506e+02, x2*(3.47009e-06) + (-1.91698e-03), if(x2 < 6.95563e+02, x2*(-9.15555e-08) + (1.11399e-04), if(x2 < 2.39563e+03, x2*(5.48825e-08) + (9.54200e-06), if(x2 < 2.40457e+03, x2*(-8.27134e-06) + (1.99561e-02), if(x2 < 2.60131e+03, x2*(2.65607e-07) + (-5.71527e-04), if(x2 < 3.09012e+03, x2*(-2.22108e-07) + (6.97175e-04), if(x2 < 3.48919e+03, x2*(2.45923e-07) + (-7.49098e-04), -0.0007490981037785037))))))))))",
}

!----------density profile for Silicon ions----------
profile
{
  profile_type(1:2) = "uniform", "piecewise-linear",
  num_x = 59,
  x(1:59,2) = 0., 58.15, 116.31, 174.46, 232.61, 290.77, 348.92, 407.07, 465.23, 523.38, 581.53, 639.69, 697.84, 755.99, 814.14, 872.3, 930.45, 988.60, 1046.76, 1104.91, 1163.06, 1221.22, 1279.37, 1337.52, 1395.68, 1453.83, 1511.98, 1570.14, 1628.29, 1686.44, 1744.6, 1802.75, 1860.90, 1919.06, 1977.21, 2035.36, 2093.52, 2151.67, 2209.82, 2267.98, 2326.13, 2384.28, 2442.43, 2500.59, 2558.74, 2616.89, 2675.05, 2733.20, 2791.35, 2849.51, 2907.66, 2965.81, 3023.97, 3082.12, 3140.27, 3198.43, 3256.58, 3314.73, 3372.89,
  fx(1:59,2) = 54.49, 37.15, 30.13, 23.30, 18.60, 14.70, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
}

!----------boundary conditions for Silicon ions----------
spe_bound
{
 type(1:2,2) = "thermal","thermal",
 uth_bnd(1:3,1,2) = 0.006929304075270467,0.006929304075270467,0.006929304075270467,
 uth_bnd(1:3,2,2) = 0.00679802522524855,0.00679802522524855,0.00679802522524855,
}

!----------diagnostic for Silicon ions----------
diag_species
{
 ndump_fac = 1,
 reports = "charge",
 ndump_fac_pha = 1,
 ps_pmin(1:3) = -0.15, -0.15, -0.15, 
 ps_pmax(1:3) = 0.15, 0.15, 0.15,
 ps_xmin(1:2) = -7, 0,
 ps_xmax(1:2) = 7, 3489,
 ps_np(1:3) = 128, 1024, 128,
 ps_nx(1:2) = 256, 1024,
 phasespaces = "p1x1", "p1x2", "p2x1", "p2x2",
}

!--------Current smoothing----------
smooth
{
  type = "none",
  order = 1,
}

"""
}
